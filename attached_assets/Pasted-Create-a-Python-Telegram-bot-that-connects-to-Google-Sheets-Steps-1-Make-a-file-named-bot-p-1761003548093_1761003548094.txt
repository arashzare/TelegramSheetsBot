Create a Python Telegram bot that connects to Google Sheets. 

Steps:
1. Make a file named `bot.py` with the following code:

import os
import datetime
import gspread
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from google.oauth2.service_account import Credentials

TOKEN = os.environ['BOT_TOKEN']

SCOPES = ["https://www.googleapis.com/auth/spreadsheets"]
creds = Credentials.from_service_account_file("credentials.json", scopes=SCOPES)
gc = gspread.authorize(creds)

SHEET_NAME = "Expenses"
sheet = gc.open(SHEET_NAME).sheet1

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã Hi! Send me your expense like:\n\nLunch 12.50\n\nor send a photo of your receipt.")

async def add_expense(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    parts = text.split()
    try:
        amount = float(parts[-1])
        description = " ".join(parts[:-1])
        date = datetime.date.today().isoformat()
        sheet.append_row([date, description, amount, ""])
        await update.message.reply_text(f"‚úÖ Saved: {description} - ${amount}")
    except:
        await update.message.reply_text("‚ùå Please send in this format:\nExample: Coffee 3.75")

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    photo = update.message.photo[-1]
    file = await photo.get_file()
    file_url = file.file_path
    date = datetime.date.today().isoformat()
    sheet.append_row([date, "Receipt Photo", "", file_url])
    await update.message.reply_text("üì∏ Receipt saved to Google Sheet!")

app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, add_expense))
app.add_handler(MessageHandler(filters.PHOTO, handle_photo))

app.run_polling()


2. Make a `requirements.txt` file with:
python-telegram-bot==20.3
gspread
google-auth

3. Upload your `credentials.json` (Google service account file) to the project.

4. In Replit Secrets (üîí